plugins {
    id 'buildlogic.java-conventions'
    alias(libs.plugins.spring.dependency.management)
    alias(libs.plugins.spring.boot)
    alias(libs.plugins.netflix.dgs.codegen)
    alias(libs.plugins.git.properties)
    alias(libs.plugins.spotless)
}

dependencyManagement {
    imports {
        //mavenBom(libs.spring.boot.dependencies)
        mavenBom("com.netflix.graphql.dgs:graphql-dgs-platform-dependencies:${libs.versions.netflix.dgs.get()}")
    }
}


dependencies {
    api project(':vino-baselib')

    annotationProcessor 'org.projectlombok:lombok'
    api 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    api libs.bundles.spring.basics
    api libs.bundles.spring.webmvc
    api libs.bundles.spring.data
    api libs.bundles.netflix.dgs
    api libs.bundles.spring.cache.redis
    api 'org.springframework.boot:spring-boot-starter-data-mongodb'
    api 'org.springframework.boot:spring-boot-starter-actuator'

    runtimeOnly 'com.mysql:mysql-connector-j'
    runtimeOnly 'org.postgresql:postgresql'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'com.h2database:h2'
    testImplementation libs.embed.mongo.spring
    testImplementation libs.jedis.mock
}

generateJava {
    schemaPaths = ["${projectDir}/src/main/resources/schema/schema.graphqls"]
    packageName = 'net.vino9.vino.demo.generated'
    generateClient = false
    typeMapping = ['BigDecimal': 'java.math.BigDecimal']
}

description = 'vino-demo-svc'
