# This file was generated by the Gradle 'init' task.
# https://docs.gradle.org/current/userguide/platforms.html#sub::toml-dependencies-format

[versions]
com-github-fppt-jedis-mock = "1.0.9"
com-h2database-h2 = "2.1.214"
com-mysql-mysql-connector-j = "8.0.33"
com-netflix-graphql-dgs-graphql-dgs-extended-scalars = "6.0.5"
com-netflix-graphql-dgs-graphql-dgs-pagination = "6.0.5"
com-netflix-graphql-dgs-graphql-dgs-spring-boot-starter = "6.0.5"
de-flapdoodle-embed-de-flapdoodle-embed-mongo-spring30x = "4.11.0"
org-flywaydb-flyway-core = "9.5.1"
org-modelmapper-modelmapper = "3.0.0"
org-modelmapper-myextensions-modelmapper-spring = "3.0.0"
org-postgresql-postgresql = "42.5.4"
org-projectlombok-lombok = "1.18.26"
org-springframework-boot-spring-boot-starter-cache = "3.0.7"
org-springframework-boot-spring-boot-starter-data-jpa = "3.0.7"
org-springframework-boot-spring-boot-starter-data-mongodb = "3.0.7"
org-springframework-boot-spring-boot-starter-data-redis = "3.0.7"
org-springframework-boot-spring-boot-starter-test = "3.0.7"
org-springframework-boot-spring-boot-starter-validation = "3.0.7"
org-springframework-boot-spring-boot-starter-web = "3.0.7"
org-springframework-data-spring-data-commons = "3.0.6"

[libraries]
com-github-fppt-jedis-mock = { module = "com.github.fppt:jedis-mock", version.ref = "com-github-fppt-jedis-mock" }
com-h2database-h2 = { module = "com.h2database:h2", version.ref = "com-h2database-h2" }
com-mysql-mysql-connector-j = { module = "com.mysql:mysql-connector-j", version.ref = "com-mysql-mysql-connector-j" }
com-netflix-graphql-dgs-graphql-dgs-extended-scalars = { module = "com.netflix.graphql.dgs:graphql-dgs-extended-scalars", version.ref = "com-netflix-graphql-dgs-graphql-dgs-extended-scalars" }
com-netflix-graphql-dgs-graphql-dgs-pagination = { module = "com.netflix.graphql.dgs:graphql-dgs-pagination", version.ref = "com-netflix-graphql-dgs-graphql-dgs-pagination" }
com-netflix-graphql-dgs-graphql-dgs-spring-boot-starter = { module = "com.netflix.graphql.dgs:graphql-dgs-spring-boot-starter", version.ref = "com-netflix-graphql-dgs-graphql-dgs-spring-boot-starter" }
de-flapdoodle-embed-de-flapdoodle-embed-mongo-spring30x = { module = "de.flapdoodle.embed:de.flapdoodle.embed.mongo.spring30x", version.ref = "de-flapdoodle-embed-de-flapdoodle-embed-mongo-spring30x" }
org-flywaydb-flyway-core = { module = "org.flywaydb:flyway-core", version.ref = "org-flywaydb-flyway-core" }
org-modelmapper-modelmapper = { module = "org.modelmapper:modelmapper", version.ref = "org-modelmapper-modelmapper" }
org-modelmapper-myextensions-modelmapper-spring = { module = "org.modelmapper.extensions:modelmapper-spring", version.ref = "org-modelmapper-myextensions-modelmapper-spring" }
org-postgresql-postgresql = { module = "org.postgresql:postgresql", version.ref = "org-postgresql-postgresql" }
org-projectlombok-lombok = { module = "org.projectlombok:lombok", version.ref = "org-projectlombok-lombok" }
org-springframework-boot-spring-boot-starter-cache = { module = "org.springframework.boot:spring-boot-starter-cache", version.ref = "org-springframework-boot-spring-boot-starter-cache" }
org-springframework-boot-spring-boot-starter-data-jpa = { module = "org.springframework.boot:spring-boot-starter-data-jpa", version.ref = "org-springframework-boot-spring-boot-starter-data-jpa" }
org-springframework-boot-spring-boot-starter-data-mongodb = { module = "org.springframework.boot:spring-boot-starter-data-mongodb", version.ref = "org-springframework-boot-spring-boot-starter-data-mongodb" }
org-springframework-boot-spring-boot-starter-data-redis = { module = "org.springframework.boot:spring-boot-starter-data-redis", version.ref = "org-springframework-boot-spring-boot-starter-data-redis" }
org-springframework-boot-spring-boot-starter-test = { module = "org.springframework.boot:spring-boot-starter-test", version.ref = "org-springframework-boot-spring-boot-starter-test" }
org-springframework-boot-spring-boot-starter-validation = { module = "org.springframework.boot:spring-boot-starter-validation", version.ref = "org-springframework-boot-spring-boot-starter-validation" }
org-springframework-boot-spring-boot-starter-web = { module = "org.springframework.boot:spring-boot-starter-web", version.ref = "org-springframework-boot-spring-boot-starter-web" }
org-springframework-data-spring-data-commons = { module = "org.springframework.data:spring-data-commons", version.ref = "org-springframework-data-spring-data-commons" }
